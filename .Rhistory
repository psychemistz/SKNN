ggplot(airquality, aes(x=Day, y=Ozone, size=Wind, fill = Month)) +
geom_point(shape = 21) +
ggtitle("Air Quality") +
labs(x="Day", y= "Ozone (ppb)") +
scale_size_area(max_size=10)
scale_x_continuous(breaks = seq(1, 31, 5)) # change the x-axis to every 5 days, and change the range from 1 to 31
ggplot(airquality, aes(x=Day, y=Ozone, size=Wind, fill = Month)) +
geom_point(shape = 21) +
ggtitle("Air Quality") +
labs(x="Day", y= "Ozone (ppb)") +
scale_size_area(max_size=20)
scale_x_continuous(breaks = seq(1, 31, 5)) # change the x-axis to every 5 days, and change the range from 1 to 31
ggplot(airquality, aes(x=Day, y=Ozone, size=Wind, fill = Month)) +
geom_point(shape = 21) +
ggtitle("Air Quality") +
labs(x="Day", y= "Ozone (ppb)") +
scale_x_continuous(breaks = seq(1, 31, 5))+ # change the x-axis to every 5 days, and change the range from 1 to 31
scale_size(range=c(1,10)
dev.off()
dev.off()
ggplot(airquality, aes(x=Day, y=Ozone, size=Wind, fill = Month)) +
geom_point(shape = 21) +
ggtitle("Air Quality") +
labs(x="Day", y= "Ozone (ppb)") +
scale_x_continuous(breaks = seq(1, 31, 5))+ # change the x-axis to every 5 days, and change the range from 1 to 31
scale_size(range=c(1,10))
ggplot(airquality, aes(x=Day, y=Ozone, size=Wind, fill = Month)) +
geom_point(shape = 21) +
ggtitle("Air Quality") +
labs(x="Day", y= "Ozone (ppb)") +
scale_x_continuous(breaks = seq(1, 31, 5))+ # change the x-axis to every 5 days, and change the range from 1 to 31
scale_size(range=c(1,20))
ggplot(airquality, aes(x=Day, y=Ozone, size=Wind, fill = Month)) +
geom_point(shape = 21) +
ggtitle("Air Quality") +
labs(x="Day", y= "Ozone (ppb)") +
scale_x_continuous(breaks = seq(1, 31, 5))+ # change the x-axis to every 5 days, and change the range from 1 to 31
scale_size(range=c(1,15))
ggplot(airquality, aes(x=Day, y=Ozone, size=Wind, fill = Month)) +
geom_point(shape = 21) +
ggtitle("Air Quality") +
labs(x="Day", y= "Ozone (ppb)") +
scale_x_continuous(breaks = seq(1, 31, 5))+ # change the x-axis to every 5 days, and change the range from 1 to 31
scale_size(range=c(1,12))
ggplot(airquality, aes(x=Day, y=Ozone, size=Wind, fill = Month)) +
geom_point(shape = 21) +
ggtitle("Air Quality") +
labs(x="Day", y= "Ozone (ppb)") +
scale_x_continuous(breaks = seq(1, 31, 5))+ # change the x-axis to every 5 days, and change the range from 1 to 31
scale_size(range=c(1,12))+
theme(legend.position = "bottom", legend.direction = "horizontal")
theme(legend.box = "horizontal", legend.key.size=unit(1,"cm"))
ggplot(airquality, aes(x=Day, y=Ozone, size=Wind, fill = Month)) +
geom_point(shape = 21) +
ggtitle("Air Quality") +
labs(x="Day", y= "Ozone (ppb)") +
scale_x_continuous(breaks = seq(1, 31, 5))+ # change the x-axis to every 5 days, and change the range from 1 to 31
scale_size(range=c(1,12))+
theme(legend.box = "horizontal", legend.key.size=unit(1,"cm"))
ggplot(airquality, aes(x=Day, y=Ozone, size=Wind, fill = Month)) +
geom_point(shape = 21) +
ggtitle("Air Quality") +
labs(x="Day", y= "Ozone (ppb)") +
scale_x_continuous(breaks = seq(1, 31, 5))+ # change the x-axis to every 5 days, and change the range from 1 to 31
scale_size(range=c(1,12))+
theme(legend.position = "bottom", legend.direction = "horizontal")+
theme(legend.box = "horizontal", legend.key.size=unit(1,"cm"))
ggplot(airquality, aes(x=Day, y=Ozone, size=Wind, fill = Month)) +
geom_point(shape = 21) +
ggtitle("Air Quality") +
labs(x="Day", y= "Ozone (ppb)") +
scale_x_continuous(breaks = seq(1, 31, 5))+ # change the x-axis to every 5 days, and change the range from 1 to 31
scale_size(range=c(1,12))+
theme(legend.position = "bottom", legend.direction = "horizontal", legend.box = "horizontal", legend.key.size=unit(1,"cm"))
head(airquality)
airquality$Month
detach(airquality)
aq_by_month <- airquality[which(airquality$Month == 5|airquality$Month == 6|airquality$Month == 7|airquality$Month == 8|airquality$Month == 9), ]
aq_by_month
factor(aq_by_month)
aq_by_month <-factor(aq_by_Month$Month, labels = c("May", "June", "July", "August", "September"))
aq_by_month <-factor(airquality$Month, labels = c("May", "June", "July", "August", "September"))
ggplot(aq_by_month, aes(x=Day, y=Ozone, size=Wind, fill = Month)) +
geom_point(shape = 21) +
ggtitle("Air Quality") +
labs(x="Day", y= "Ozone (ppb)") +
scale_x_continuous(breaks = seq(1, 31, 5))+ # change the x-axis to every 5 days, and change the range from 1 to 31
scale_size(range=c(1,12))+
theme(legend.position = "bottom", legend.direction = "horizontal", legend.box = "horizontal", legend.key.size=unit(1,"cm"))
aq_by_month
aq_by_month <- airquality[which(airquality$Month == 5|airquality$Month == 6|airquality$Month == 7|airquality$Month == 8|airquality$Month == 9), ]
aq_by_month <-factor(aq_by_Month$Month, labels = c("May", "June", "July", "August", "September"))
aq_by_month <- airquality[which(airquality$Month == 5|airquality$Month == 6|airquality$Month == 7|airquality$Month == 8|airquality$Month == 9), ]
aq_by_month$Month <-factor(aq_by_Month$Month, labels = c("May", "June", "July", "August", "September"))
aq_by_month <- airquality
aq_by_month$Month <- factor(aq_by_Month$Month, labels = c("May", "June", "July", "August", "September"))
?factor
aq_by_month$Month <- factor(airquality$Month, labels = c("May", "June", "July", "August", "September"))
aq_by_month <- airquality
aq_by_month$Month <- factor(airquality$Month, labels = c("May", "June", "July", "August", "September"))
aq_by_month
ggplot(aq_by_month, aes(x=Day, y=Ozone, size=Wind, fill = Month)) +
geom_point(shape = 21) +
ggtitle("Air Quality") +
labs(x="Day", y= "Ozone (ppb)") +
scale_x_continuous(breaks = seq(1, 31, 5))+ # change the x-axis to every 5 days, and change the range from 1 to 31
scale_size(range=c(1,12))+
theme(legend.position = "bottom", legend.direction = "horizontal", legend.box = "horizontal", legend.key.size=unit(1,"cm"))
?airquality
library(datasets)
# Initialize
rm(list=ls())
dev.off()
# Install Packages
install.packages("MASS")
# Data preparation
library(MASS)
attach(Animals)
str(Animals)
x = round(log(brain), 2); x
y = round(log(body), 2) ; y
df = data.frame(x, y, row.names=row.names(Animals))
head(Animals)
head(df)
detach(Animals)
# Plot - HW 1-1
plot(df, type="p", main="Brain vs.Body Weights of Animals", xlab="Brain Weights (g)", ylab="Body Weights (kg)")
text(x, y, labels=row.names(Animals), cex=0.6)
# Plot - HW 1-2
library(ggplot2)
ggplot(df, aes(x, y)) +
geom_point(size=2, color="orange") +
geom_text(aes(x, y, label=row.names(df)))
install.packages("MASS")
# Initialize
rm(list=ls())
dev.off()
# plot with ggplot
library(ggplot2)
ggplot(iris, aes(Sepal.Length, fill=Species)) +
geom_histogram(color="black")+
facet_grid(Species ~ .)+
ggtitle("Sepal Length of iris Dataset") +
theme(legend.position="none")
# Initialize
rm(list=ls())
dev.off()
# Data preparation
library(datasets)
head(airquality)
aq_by_month <- airquality
aq_by_month$Month <- factor(airquality$Month, labels = c("May", "June", "July", "August", "September"))
aq_by_month
# Bubble Plot with ggplot
ggplot(aq_by_month, aes(x=Day, y=Ozone, size=Wind, fill = Month)) +
geom_point(shape = 21) +
ggtitle("Air Quality in New York by Day (1973)") +
labs(x="Day", y= "Ozone (ppb)") +
scale_x_continuous(breaks = seq(1, 31, 5))+ # change the x-axis to every 5 days, and change the range from 1 to 31
scale_size(range=c(1,12))+
theme(legend.position = "bottom", legend.direction = "horizontal", legend.box = "horizontal", legend.key.size=unit(1,"cm"))
# Plot - HW 1-1
plot(df, type="p", main="Brain vs.Body Weights of Animals", xlab="Brain Weights (g)", ylab="Body Weights (kg)")
text(x, y, labels=row.names(Animals), cex=0.6)
# Plot - HW 1-2
library(ggplot2)
ggplot(df, aes(x, y)) +
geom_point(size=2, color="orange") +
geom_text(aes(x, y, label=row.names(df)))
# Initialize
rm(list=ls())
dev.off()
# Install Packages
install.packages("MASS")
# Data preparation
library(MASS)
attach(Animals)
str(Animals)
x = round(log(brain), 2)
y = round(log(body), 2)
df = data.frame(x, y, row.names=row.names(Animals))
head(Animals)
head(df)
detach(Animals)
# Initialize
rm(list=ls())
dev.off()
# Install Packages
install.packages("MASS")
# Data preparation
library(MASS)
attach(Animals)
str(Animals)
x = round(log(brain), 2)
y = round(log(body), 2)
df = data.frame(x, y, row.names=row.names(Animals))
head(Animals)
head(df)
detach(Animals)
# Plot - HW 1-1
plot(df, type="p", main="Brain vs.Body Weights of Animals", xlab="Brain Weights (g)", ylab="Body Weights (kg)")
text(x, y, labels=row.names(Animals), cex=0.6)
# Plot - HW 1-2
library(ggplot2)
ggplot(df, aes(x, y)) +
geom_point(size=2, color="orange") +
geom_text(aes(x, y, label=row.names(df)))
install.packages("MASS")
attach(Animals)
str(Animals)
x = round(log(brain), 2)
y = round(log(body), 2)
df = data.frame(x, y, row.names=row.names(Animals))
head(Animals)
head(df)
detach(Animals)
attach(Animals)
str(Animals)
x = round(log(brain), 2)
y = round(log(body), 2)
df = data.frame(x, y, row.names=row.names(Animals))
head(Animals)
head(df)
detach(Animals)
attach(Animals)
str(Animals)
x = round(log(brain), 2)
y = round(log(body), 2)
df = data.frame(x, y, row.names=row.names(Animals))
head(Animals)
head(df)
detach(Animals)
x = round(log(brain), 2)
y = round(log(body), 2)
df = data.frame(x, y, row.names=row.names(Animals))
head(Animals)
head(df)
library(datasets)
attach(Animals)
x = round(log(brain), 2)
y = round(log(body), 2)
df = data.frame(x, y, row.names=row.names(Animals))
head(Animals)
head(df)
library(datasets)
Animals
# Initialize
rm(list=ls())
dev.off()
# Data preparation
library(MASS)
attach(Animals)
str(Animals)
x = round(log(brain), 2)
y = round(log(body), 2)
df = data.frame(x, y, row.names=row.names(Animals))
head(Animals)
head(df)
detach(Animals)
# Plot - HW 1-1
plot(df, type="p", main="Brain vs.Body Weights of Animals", xlab="Brain Weights (g)", ylab="Body Weights (kg)")
text(x, y, labels=row.names(Animals), cex=0.6)
# Plot - HW 1-2
library(ggplot2)
ggplot(df, aes(x, y)) +
geom_point(size=2, color="orange") +
geom_text(aes(x, y, label=row.names(df)))
head(Animals)
# HW 1
# (1) Using the plot function, draw a graph of log(brain) versus log(body)
# for the data set Animals from the MASS package. Label the animal names appropriately
# Initialize
rm(list=ls())
dev.off()
# Install Packages
install.packages("MASS")
# Data preparation
library(MASS)
attach(Animals)
str(Animals)
x = round(log(brain), 2); x
y = round(log(body), 2) ; y
df = data.frame(x, y, row.names=row.names(Animals))
head(Animals)
head(df)
detach(Animals)
# Plot - HW 1-1
plot(df, type="p", main="Brain vs.Body Weights of Animals", xlab="Brain Weights (g)", ylab="Body Weights (kg)")
text(x, y, labels=row.names(Animals), cex=0.6)
# Plot - HW 1-2
library(ggplot2)
ggplot(df, aes(x, y)) +
geom_point(size=2, color="orange") +
geom_text(aes(x, y, label=row.names(df)))
# HW 2
# The following exersies relate to the data frame iris that accompanies these notes:
# Using the ggplot function, draw a tabular histogram for Sepal.Length.
# Change colors according to the Species.
# Initialize
rm(list=ls())
dev.off()
# plot with ggplot
library(ggplot2)
ggplot(iris, aes(Sepal.Length, fill=Species)) +
geom_histogram(color="black")+
facet_grid(Species ~ .)+
ggtitle("Sepal Length of iris Dataset") +
theme(legend.position="none")
# HW 3
# The following exersies relate to the data frame airquality in the dataset pack. Using the ggplot function,
# draw a bubble chart for Day versus Ozone as follows.
# Change color and bubble size by Month and Wind, respectively.
# Use scale_x_continuous(breaks=seq(1, 31, 5))
# Initialize
rm(list=ls())
dev.off()
# Data preparation
library(datasets)
head(airquality)
aq_by_month <- airquality
aq_by_month$Month <- factor(airquality$Month, labels = c("May", "June", "July", "August", "September"))
aq_by_month
# Bubble Plot with ggplot
ggplot(aq_by_month, aes(x=Day, y=Ozone, size=Wind, fill = Month)) +
geom_point(shape = 21) +
ggtitle("Air Quality in New York by Day (1973)") +
labs(x="Day", y= "Ozone (ppb)") +
scale_x_continuous(breaks = seq(1, 31, 5))+ # change the x-axis to every 5 days, and change the range from 1 to 31
scale_size(range=c(1,12))+
theme(legend.position = "bottom", legend.direction = "horizontal", legend.box = "horizontal", legend.key.size=unit(1,"cm"))
install.packages("MASS")
rm(list=ls())
dev.off()
# plot with ggplot
library(ggplot2)
ggplot(iris, aes(Sepal.Length, fill=Species)) +
geom_histogram(color="black")+
facet_grid(Species ~ .)+
ggtitle("Sepal Length of iris Dataset") +
theme(legend.position="none")
# Plot - HW 1-1
plot(df, type="p", main="Brain vs.Body Weights of Animals", xlab="Brain Weights (g)", ylab="Body Weights (kg)")
text(x, y, labels=row.names(Animals), cex=0.6)
# Initialize
rm(list=ls())
dev.off()
# Install Packages
install.packages("MASS")
# Data preparation
library(MASS)
attach(Animals)
str(Animals)
x = round(log(brain), 2); x
y = round(log(body), 2) ; y
df = data.frame(x, y, row.names=row.names(Animals))
head(Animals)
head(df)
detach(Animals)
# Plot - HW 1-1
plot(df, type="p", main="Brain vs.Body Weights of Animals", xlab="Brain Weights (g)", ylab="Body Weights (kg)")
text(x, y, labels=row.names(Animals), cex=0.6)
install.packages("MASS")
# Plot - HW 1-1
plot(df, type="p", main="Brain vs.Body Weights of Animals", xlab="Brain Weights (g)", ylab="Body Weights (kg)")
text(x, y, labels=row.names(Animals), cex=0.6, pch=7)
# Initialize
rm(list=ls())
dev.off()
# Install Packages
install.packages("MASS")
# Data preparation
library(MASS)
attach(Animals)
str(Animals)
x = round(log(brain), 2); x
y = round(log(body), 2) ; y
df = data.frame(x, y, row.names=row.names(Animals))
head(Animals)
head(df)
detach(Animals)
# Plot - HW 1-1
plot(df, type="p", main="Brain vs.Body Weights of Animals", xlab="Brain Weights (g)", ylab="Body Weights (kg)")
text(x, y, labels=row.names(Animals), cex=0.6, pch=3)
install.packages("MASS")
# Plot - HW 1-1
plot(df, type="p", main="Brain vs.Body Weights of Animals", xlab="Brain Weights (g)", ylab="Body Weights (kg)")
text(x, y, labels=row.names(Animals), cex=0.6, pch=3)
# Plot - HW 1-1
plot(df, type="p", main="Brain vs.Body Weights of Animals", xlab="Brain Weights (g)", ylab="Body Weights (kg)", pch=3)
text(x, y, labels=row.names(Animals), cex=0.6)
library(ggplot2)
ggplot(df, aes(x, y)) +
geom_point(size=2, color="orange") +
geom_text(aes(x, y, label=row.names(df)))
# Plot - HW 1-2
library(ggplot2)
ggplot(df, aes(x, y)) +
geom_point(size=2, color="orange") +
geom_text(aes(x, y, label=row.names(df)))
ggtitle("Brain Vs. Body Weights of Animals") +
labs(x="Brain Weights(g)", y= "Body Weights (kg)") +
d
# Plot - HW 1-2
library(ggplot2)
ggplot(df, aes(x, y)) +
geom_point(size=2, color="orange") +
geom_text(aes(x, y, label=row.names(df)))
ggtitle("Brain Vs. Body Weights of Animals") +
labs(x="Brain Weights(g)", y= "Body Weights (kg)")
library(ggplot2)
ggplot(df, aes(x, y)) +
geom_point(size=2, color="orange") +
geom_text(aes(x, y, label=row.names(df))) +
ggtitle("Brain Vs. Body Weights of Animals") +
labs(x="Brain Weights(g)", y= "Body Weights (kg)")
# Initialize
rm(list=ls())
dev.off()
# plot with ggplot
library(ggplot2)
ggplot(iris, aes(Sepal.Length, fill=Species)) +
geom_histogram(color="black")+
facet_grid(Species ~ .)+
ggtitle("Sepal Length of iris Dataset") +
theme(legend.position="none")
rm(list=ls())
dev.off()
# plot with ggplot
library(ggplot2)
ggplot(iris, aes(Sepal.Length, fill=Species)) +
geom_histogram(color="black")+
facet_grid(Species ~ .)+
ggtitle("Sepal Length of iris Dataset") +
labs(x="Sepal Length", y="Frequency)") +
theme(legend.position="none")
library(ggplot2)
ggplot(iris, aes(Sepal.Length, fill=Species)) +
geom_histogram(color="black")+
facet_grid(Species ~ .)+
ggtitle("Sepal Length of iris Dataset") +
labs(x="Sepal Length", y="Frequency") +
theme(legend.position="none")
# Initialize
rm(list=ls())
dev.off()
# Data preparation
library(datasets)
head(airquality)
aq_by_month <- airquality
aq_by_month$Month <- factor(airquality$Month, labels = c("May", "June", "July", "August", "September"))
aq_by_month
# Bubble Plot with ggplot
ggplot(aq_by_month, aes(x=Day, y=Ozone, size=Wind, fill = Month)) +
geom_point(shape = 21) +
ggtitle("Air Quality in New York by Day (1973)") +
labs(x="Day", y= "Ozone (ppb)") +
scale_x_continuous(breaks = seq(1, 31, 5))+ # change the x-axis to every 5 days, and change the range from 1 to 31
scale_size(range=c(1,12))+
theme(legend.position = "bottom", legend.direction = "horizontal", legend.box = "horizontal", legend.key.size=unit(1,"cm"))
---
rm(list=ls())
getwd()
install.packages("E:/1. Lab-Services/SKNN/SKNN_1.0.0.tar.gz", repo=NULL, type="source")
str(SKNN)
install.packages("E:/1. Lab-Services/SKNN/SeqKnn_1.0.1.tar.gz", repo=NULL, type="source")
install.packages("E:/1. Lab-Services/SKNN/SeqKnn_1.0.1.tar.gz", repo=NULL, type="source")
install.packages("E:/1. Lab-Services/SKNN/SeqKnn_1.0.1.tar.gz", repo=NULL, type="source")
install.packages("E:/1. Lab-Services/SKNN/SeqKnn_1.0.0.tar.gz", repo=NULL, type="source")
install.packages("E:/1. Lab-Services/SKNN/SKNN_1.0.0.tar.gz", repo=NULL, type="source")
install.packages("SKNN", repo="143.248.33.195/Bisyn-Lab-Tools/SKNN", type="source")
install.packages("SeqKnn", repo="143.248.33.195/Bisyn-Lab-Tools/SKNN", type="source")
install.packages("143.248.33.195/Bisyn-Lab-Tools/SKNN", repo=NULL, type="source")
install.packages("143.248.33.195/Bisyn-Lab-Tools/SKNN/SKNN_1.0.0.tar.gz", repo=NULL, type="source")
install.packages("143.248.33.195/Bisyn-Lab-Tools/SKNN/SKNN_1.0.0.tar.gz", repo=NULL, type="source")
install.packages("143.248.33.195/Bisyn-Lab-Tools/SKNN/SKNN_1.0.0.tar.gz", type="source")
install.packages("143.248.33.195/Bisyn-Lab-Tools/SKNN/SKNN_1.0.0.tar.gz", repo=NULL, type="source")
install.packages(repo="143.248.33.195/Bisyn-Lab-Tools/SKNN/SKNN_1.0.0.tar.gz", type="source")
install.packages(SKNN, repo="143.248.33.195/Bisyn-Lab-Tools/SKNN/SKNN_1.0.0.tar.gz", type="source")
install.packages("SKNN", repo="143.248.33.195/Bisyn-Lab-Tools/SKNN/SKNN_1.0.0.tar.gz", type="source")
install.packages("SKNN", repo="143.248.33.195/Bisyn-Lab-Tools/SKNN", type="source")
install.packages("143.248.33.195/Bisyn-Lab-Tools/SKNN/SKNN_1.0.0.tar.gz", repos=NULL, type="source")
install.packages("E:/Windows-Server/wwwroot/Bisyn-Lab-Tools/SKNN/SKNN_1.0.0.tar.gz", repos=NULL, type="source")
install.packages("http://143.248.33.195/Bisyn-Lab-Tools/SKNN/SKNN_1.0.0.tar.gz", repos=NULL, type="source")
?SKNN
??SKNN
source('~/.active-rstudio-document', echo=TRUE)
SKNN::nnmiss()
?SKNN::nnmiss()
nnmiss()
nnmiss
SKNN::nnmiss
SKNN::nnmiss
SKNN::SeqKNN
setwd("E:/Windows-Server/wwwroot/Bisyn-Lab-Tools/SKNN")
read.csv("Citation-Trend.csv")
summary(read.csv("Citation-Trend.csv"))
a <- read.csv("Citation-Trend.csv")[2:4,]
a
a <- read.csv("Citation-Trend.csv")[1:3,]
a
na.rm(a)
a <- read.csv("Citation-Trend.csv", na.rm=T)[1:3,]
read
a <- read.csv("Citation-Trend.csv", na.rm=T)[1:3,]
a <- read.csv("Citation-Trend.csv", na.rm=T)
a <- read.csv("Citation-Trend.csv")
a
names(a)
a <- read.csv("Citation-Trend.csv")
a
library(knitr)
source('~/.active-rstudio-document', echo=TRUE)
